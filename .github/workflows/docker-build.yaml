---
name: docker-build
on:
  workflow_call:
    inputs:
      REGISTRY:
        required: true
        type: string
        default: ghcr.io
      CONTEXT:
        required: false
        type: string
        default: .
      WITH_XDEBUG:
        required: false
        type: string
        default: false
      APP_ENV:
        required: false
        type: string
        default: prod
    secrets:
      GH_REGISTRY_USERNAME:
        required: true
      GH_REGISTRY_PASSWORD:
        required: true
env:
  REGISTRY: ${{ inputs.REGISTRY }}
  GH_REGISTRY_USERNAME: ${{ secrets.GH_REGISTRY_USERNAME }}
  GH_REGISTRY_PASSWORD: ${{ secrets.GH_REGISTRY_PASSWORD }}
  GITHUB_TOKEN: ${{ secrets.GH_REGISTRY_PASSWORD }}
  CONTEXT: ${{ inputs.CONTEXT }}
  WITH_XDEBUG: ${{ inputs.WITH_XDEBUG }}
  APP_ENV: ${{ inputs.APP_ENV }}

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Get Short SHA
        id: sha
        run: echo "::set-output name=sha8::$(echo ${GITHUB_SHA} | cut -c1-8)"
      - name: Checkout
        uses: actions/checkout@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ env.GH_REGISTRY_USERNAME }}
          password: ${{ env.GH_REGISTRY_PASSWORD }}
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v2
        with:
          context: ${{ env.CONTEXT }}
          push: true
          build-args: |
            APP_ENV=${{ env.APP_ENV }}
            CI_ENV=${{ env.APP_ENV }}
            APP_VERSION=${{ steps.sha.outputs.sha8 }}
            WITH_NEW_RELIC=true
          tags: |
            ghcr.io/${{ github.repository }}:${{ steps.sha.outputs.sha8 }}
            ghcr.io/${{ github.repository }}:latest